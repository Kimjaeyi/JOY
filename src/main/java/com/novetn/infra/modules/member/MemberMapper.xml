<?xml version="1.0" encoding="UTF-8" ?>
 
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.novetn.infra.modules.member.MemberMapper">

    <resultMap id="resultMapObj" type="com.novetn.infra.modules.member.Member"></resultMap>
	
	<sql id = "selectCommon">
		FROM member a
			inner join Code b ON a.grade = b.seq
		WHERE 1=1
		 
		<if test="shDelNy != null and !shDelNy.equals('')">AND a.delNY = #{shDelNy}</if>
		<if test="shOptionMem != null and !shOptionMem.equals('')">AND a.grade = #{shOptionMem}</if>
		<choose>
			<when test="shOptionDate == 1">AND a.dob BETWEEN #{shstartDate} AND #{shendDate}</when>
			<when test="shOptionDate == 2">AND a.regDate BETWEEN #{shstartDate} AND #{shendDate}</when>
		</choose>
		
		<choose>
			<when test="shOption == 1">AND a.name LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 2">AND a.email LIKE CONCAT('%',#{shValue},'%')</when>
			<when test="shOption == 3">AND a.phone LIKE CONCAT('%',#{shValue},'%')</when>
		</choose>
	</sql>

	<select id="selectList" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql" />
 		SELECT
			a.seq
			, a.membership
			, b.name_eng
			, a.name
			, a.gender
			, a.dob
			, a.id
			, a.pwd
			, a.email
			, a.emailID
			, a.emailDomain
			, a.telecom
			, a.phone
			, a.zipcode
			, a.addr1
			, a.addr2
			, a.addr3
			, a.regDate
			, a.delNY
		<include refid="selectCommon" />
		<include refid="Base.selectListLowerForMysql" />
	</select>
	
	<select id="selectOneCount" resultType="Integer">
		SELECT COUNT(*)
		<include refid="selectCommon" />
	</select>
	
	<insert id="insert">
		INSERT INTO member (
			name
			, dob
			, id
			, pwd
			, membership
			, name_eng
			, email 
			, emailID
			, emailDomain
			, telecom
			, phone
			, gender
			, zipcode
			, addr1
			, addr2
			, addr3
			, validity
			, regDate
			, delNY
		)
		VALUES (
			#{name}
			, #{dob}
			, #{id}
			, #{pwd}
			, #{membership}
			, #{name_eng}
			, #{email}
			, #{emailID}
			, #{emailDomain}
			, #{telecom}
			, #{phone}
			, #{gender}
			, #{zipcode}
			, #{addr1}
			, #{addr2}
			, #{addr3}
			, #{validity}
			, now()
			, 0
		)
		<selectKey resultType="String" keyProperty="seq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
		
	</insert>

	<select id="selectOne" resultMap="resultMapObj">
		SELECT
			a.name
			, a.dob
			, a.id
			, a.pwd
			, b.name_eng
			, a.membership
			, a.gender
			, a.email
			, a.emailID
			, a.emailDomain
			, a.telecom
			, a.phone
			, a.zipcode
			, a.addr1
			, a.addr2
			, a.addr3
			, a.validity
			, a.regDate
			, a.delNY
		FROM member a
			inner join Code b ON a.grade = b.seq
		WHERE 1=1
			AND a.seq = #{seq}
	</select>
	
	<update id="update">
		UPDATE member 
		SET
			name = #{name}
			, membership = CONCAT(
				<choose>
					<when test="membership eq 1">'MANAGER')</when>
					<when test="membership eq 2">'FRIEND')</when>
					<when test="membership eq 3">'VIP')</when>
					<when test="membership eq 4">'VVIP')</when>
				</choose>
			, dob = #{dob}
			, pwd = #{pwd}
			, gender = #{gender}
			, email = CONCAT(#{emailID},
				<choose>
					<when test="emailDomain eq 8">'@naver.com')</when>
					<when test="emailDomain eq 9">'@gmail.com')</when>
					<when test="emailDomain eq 10">'@hanmail.net')</when>
					<when test="emailDomain eq 11">'@daum.com')</when>
					<when test="emailDomain eq 12">'@nate.com')</when>
					<when test="emailDomain eq 13">'@coocha.com')</when>
				</choose>
			, emailID = #{emailID}
			, emailDomain = #{emailDomain}
			, telecom = CONCAT(
				<choose>
					<when test="telecom eq 5">'SKT')</when>
					<when test="telecom eq 6">'KT')</when>
					<when test="telecom eq 7">'LG')</when>
				</choose>
			, phone = #{phone}
			, zipcode = #{zipcode}
			, addr1 = #{addr1}
			, addr2 = #{addr2}
			, addr3 = #{addr3}
			, validity = #{validity}
		WHERE
			seq = #{seq}
	</update>
	
	<update id="uelete">
		UPDATE member
		SET
			delNY = 1
		WHERE 
			seq = #{seq}
	</update>
	
	<delete id="delete">
		DELETE FROM member
		WHERE
			seq = #{seq}
	</delete>
	
	<select id="idCheck" resultType="Integer">
		SELECT
			COUNT(*)
		FROM member
		WHERE
			id = #{id}
	</select>
	
	<select id="selectOneId" resultMap="resultMapObj">
		SELECT
			seq
			, id
		FROM member
		WHERE 1=1
		AND	id = #{id}
	</select>
	
	<select id="selectOneLogin" resultMap="resultMapObj">
		SELECT
			seq
			, id
		FROM member
		WHERE 1=1 
		AND	id = #{id}
		AND	pwd = #{pwd}
	</select>

</mapper>